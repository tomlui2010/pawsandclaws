name: Pawsandclaws-ci-fullstack-workflow
on:
  push:
    branches:
      - eks-terraform-githuactions

jobs:
  build-backend:    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies

      - name: Install the dependencies and hadolint
        run: |
           python -m venv ~/.venv
           source ~/.venv/bin/activate
           python -m pip install --upgrade pip
           pip install -r backend/requirements.txt
           sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && sudo chmod +x /usr/local/bin/hadolint
      
      # - name: Lint with Ruff
      #   run: |
      #      pip install ruff
      #      cd backend 
      #      ruff check --output-format=github .
      #   continue-on-error: true

      - name: Run lint
        run: |
            source ~/.venv/bin/activate
            make lint
        continue-on-error: true
      
      - name: Build the backend image
        run: |
          docker build -f backend/Dockerfile.backend -t ${{ vars.DOCKER_HUB_USER }}/${{ vars.IMAGE_NAME }}-backend-app:1.0.0 .

      - name: Push docker image to Dockerhub
        run: | 
          docker login -u ${{ vars.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push ${{ vars.DOCKER_HUB_USER }}/${{ vars.IMAGE_NAME }}-backend-app:1.0.0

  build-frontend:    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-

      - name: Install the dependencies.
        run: |
          cd frontend && npm ci
          sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && sudo chmod +x /usr/local/bin/hadolint


      - name: Run lint
        run: |
          cd frontend && make lint
          npm run lint
        continue-on-error: true
      
      - name: Build the frontend image
        run: |
          docker build -f frontend/Dockerfile.frontend -t ${{ vars.DOCKER_HUB_USER }}/${{ vars.IMAGE_NAME }}-frontend-app:1.0.0 .

      - name: Push docker image to Dockerhub
        run: | 
          docker login -u ${{ vars.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push ${{ vars.DOCKER_HUB_USER }}/${{ vars.IMAGE_NAME }}-frontend-app:1.0.0
  
  # # terraform:
  #   name: Create EKS Cluster using Terraform
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up AWS CLI
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: us-east-1

  #   - name: Set up Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 1.3.5

  #   - name: Terraform Init
  #     run: terraform init

  #   - name: Terraform Validate
  #     run: cd terraform && terraform validate 

  #   - name: Terraform Plan
  #     run: cd terraform && terraform plan 
  #     continue-on-error: true

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve